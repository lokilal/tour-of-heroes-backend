openapi: 3.0.0
info:
  title: Hero API
  description: Heroes tour
  version: 0.0.1
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
paths:
  /heroes:
    get:
      operationId: "api.controllers.hero.HeroController.heroes_list"
      summary: Возвращает список всех героев.
      description: Возвращает список всех героев.
      parameters:
        - name: name
          in: query
          schema:
            type: string
          required: false
        - name: ability
          in: query
          schema:
            type: string
          required: false
      responses:
        '200':
          description: "Успешно"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Hero'
    post:
      operationId: "api.controllers.hero.HeroController.create_hero"
      summary: "Создать нового героя"
      description: "Создает героя"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Hero'
      responses:
        '200':
          description: 'Успешно'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hero'

  /heroes/{hero_id}:
    get:
      operationId: "api.controllers.hero.HeroController.hero_detail"
      summary: "Возвращает информацию о конкретном герое."
      description: "Возвращает информацию о конкретном герое."
      parameters:
        - name: hero_id
          in: path
          required: true
          description: ID героя
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: "Успешно"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hero'
        '404':
          description: 'Герой не найден'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    put:
      operationId: "api.controllers.hero.HeroController.update_hero"
      summary: 'Изменяет информацию о герое'
      description: 'Изменяет информацию о герое'
      parameters:
        - name: hero_id
          in: path
          required: true
          description: ID героя
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: 'Успешно'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Hero'
        '404':
          description: 'Герой не найден'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
    delete:
      operationId: "api.controllers.hero.HeroController.delete_hero"
      summary: "Удаление героя"
      description: "Удаляет героя"
      parameters:
        - name: hero_id
          in: path
          required: true
          description: ID героя
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: 'Успешно'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
        '404':
          description: 'Герой не найден'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFound'
  /abilities:
    get:
      operationId: "api.controllers.hero.HeroController.abilities_list"
      summary: "Справочник способностей"
      description: "Возвращает все возможные способности"
      responses:
        '200':
          description: 'Успешно'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ability'


components:
  schemas:
    Hero:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        ability:
          type: string
    Ability:
      type: object
      properties:
        title:
          type: string
    NotFound:
      type: object
      properties:
        error:
          type: string
          example: 'Bad request'
    Success:
      type: object
      properties:
        result:
          type: string
          example: true